@using YPrime.StudyPortal.Extensions
@using YPrime.Core.BusinessLayer.Models;
@model YPrime.Data.Study.Models.Correction

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<CorrectionTypeModel> correctionTypes = ViewBag.CorrectionTypes;
}

<ul class="breadcrumb">
    <li>
        @Html.Partial("~/Views/UI/HomeLink.cshtml", new {})
    </li>
    <li>
        @Html.ActionLink("Data Corrections", "Index", "Correction")
    </li>
    <li>Create Data Correction</li>
</ul>


<div class="grid-wrapper">
    <div class="row">
        <div class="col-sm-8 col-sm-push-2">
            <div class="col-sm-12">
                <h2>Create Data Correction</h2>
            </div>
            <div class="col-sm-12">

                @using (Html.BeginForm("Create", "Correction", new { }, FormMethod.Post, new { Id = "CorrectionForm" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary("", new { @class = "text-danger dcf-validation-message" }).DecodeHtml()
                    ;

                    @Html.HiddenFor(model => model.QuestionnaireId)
                    @Html.HiddenFor(model => model.StartedByUserId)
                    @Html.HiddenFor(model => model.CorrectionStatusId)
                    @Html.HiddenFor(model => model.PatientPreLoaded)
                    @Html.HiddenFor(model => model.DiaryEntryId)
                    @Html.HiddenFor(model => model.UseMetricMeasurements)

                    @Html.Hidden("NextBtn", Html.TranslationLabel("Next", (string)ViewBag.SiteUserCultureCode))
                    ;
                    @Html.Hidden("ContinueBtn", Html.TranslationLabel("Continue", (string)ViewBag.SiteUserCultureCode))
                    ;


                    @Html.Partial("~/Views/Correction/CorrectionDataHidden.cshtml", Model)

                    <div class="form-vertical">
                        <div class="col-lg-6">
                            <div id="siteDropdown" class="form-group @Html.Raw(Model.PatientPreLoaded ? "correction-preloaded" : "")">
                                <label>@Html.TranslationLabel("SiteName", (string)ViewBag.SiteUserCultureCode):</label>
                                @if (Model.PatientPreLoaded)
                                {
                                    <span id="SiteIdLabel">@Model.SiteName</span>
                                    @Html.HiddenFor(model => model.SiteName)
                                    @Html.HiddenFor(model => model.SiteId)
                                    ;
                                }
                                else
                                {
                                    @Html.DropDownList("SiteId", new SelectList(ViewBag.Sites, "Id", "Name", ""), "", new { @class = "form-control", onchange = "LoadPatientsBySite(this,'" + Url.Action("GetPatientsBySite", "Correction") + "')" })
                                    @Html.HiddenFor(model => model.SiteName)
                                    ;
                                }
                            </div>
                            <div id="patientDropdown" class="form-group @Html.Raw(Model.PatientPreLoaded ? "correction-preloaded" : "")">
                                <label>@Html.TranslationLabel("lblPatient", (string)ViewBag.SiteUserCultureCode):</label>
                                @if (Model.PatientPreLoaded)
                                {
                                    <span id="PatientId">@Model.PatientNumber</span>
                                    @Html.HiddenFor(model => model.PatientId)
                                    @Html.HiddenFor(model => model.PatientNumber)
                                }
                                else
                                {
                                    @Html.DropDownList("PatientId", new SelectList(ViewBag.Patients, "Id", "PatientNumber", ""), "", new { @class = "form-control standard", onchange = "SetPatient(this)" })
                                    @Html.HiddenFor(model => model.PatientNumber)
                                }
                            </div>
                            <div id="correctionTypeDropdown" class="form-group">
                                <label>@Html.TranslationLabel("TypeOfCorrection", (string)ViewBag.SiteUserCultureCode):</label>
                                @Html.DropDownList("CorrectionTypeId", new SelectList(correctionTypes, "Id", "Name", ""), "", new { @class = "form-control", onchange = "LoadCorrectionType(true)" })
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>@Html.TranslationLabel("ReasonForCorrection", (string)ViewBag.SiteUserCultureCode):</label>
                                @Html.TextAreaFor(model => model.ReasonForCorrection, new { @class = "form-control", rows = "14", cols = "50" })
                            </div>
                        </div>
                        <div class="clear"></div>
                        <div class="col-lg-12">
                            <div id="CorrectionDiv"></div>
                        </div>
                        <div class="form-group">
                            <div class="row" id="DupeWarningRow" style="display: none;">
                                <div class="col-md-4 col-md-offset-2">&nbsp;</div>
                                <div class="col-md-4">
                                    <span style="color: red;">
                                        Subject number <span id="DupeWarningSubjectNumber"></span> already exists, do you want to create a duplicate?
                                    </span>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-4 col-md-offset-2">
                                    @Html.PrimeActionFontAwesomeLink(Html.TranslationLabel("Cancel", (string)ViewBag.SiteUserCultureCode), "Index", "Correction", "fa fa-close", new { @class = "btn btn-secondary btn-block panel-default" }, false, false)
                                </div>
                                <div class="col-md-4">
                                    <button class="btn btn-primary btn-block panel-default oneclick" id="SubmitCorrection" type="submit">
                                        @Html.TranslationLabel("Next", (string)ViewBag.SiteUserCultureCode) &nbsp;<em class="fa fa-check"></em>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                <input id="questionnaireDropdownPrevious" type="hidden" value="" />
            </div>
        </div>
    </div>
</div>


<script src="~/Scripts/Views/Corrections/CorrectionCreate.js"></script>
<script src="~/Scripts/Views/Corrections/ChangeQuestionnaireInfo.js"></script>
<script src="~/Scripts/Views/Corrections/CorrectionHelper.js"></script>

<script type="text/javascript">
    //serialize the descriptions
    var CorrectionTypes = {};
    @foreach (var correctionType in correctionTypes)
    {
        @: CorrectionTypes['@correctionType.Id'] = "@correctionType.Description";
    }

    $(document).ready(
        function() {

            InitCorrectionCreate('@Url.Action("GetCorrectionView", "Correction")');

            window.SubjectVal = "@ViewBag.SubjectVal";
            window.SubjectStatus = "@ViewBag.StatusVal";
        }
    );

</script>