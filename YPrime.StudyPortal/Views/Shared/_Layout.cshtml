@*@{
        Func<string> tokenHeaderValue = () =>
        {
            string cookieToken, formToken;
            AntiForgery.GetTokens(null, out cookieToken, out formToken);
            return cookieToken + ":" + formToken;
        };
    }*@

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta content="IE=edge" http-equiv="X-UA-Compatible">
    <title>YPrime Study Portal</title>
    @Styles.Render("~/Content/css")

    <link rel="icon" href="~/Content/Images/favicon.ico" type="image/ico" />
    <style>
        body {
            padding-top: 70px;
            /* Required padding for .navbar-fixed-top. Remove if using .navbar-static-top. Change if height of navigation changes. */
        }
    </style>

    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/moment")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/helpers")
    @Scripts.Render("~/bundles/d3")
    @Scripts.Render("~/bundles/datatable")
    @RenderSection("styles", false)
    @*<link href="https://fonts.googleapis.com/css?family=Roboto:300,300i,400,500,700" rel="stylesheet">*@

    @RenderSection("scripts", false)

    <meta name="description" content="YPrime Study Portal" />
</head>
<body>
    @*@Html.Hidden("RequestVerificationToken", tokenHeaderValue())*@
    <nav class="navbar navbar-inverse navbar-fixed-top" role="navigation" id="header-bar">
        <div>
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand mainLogo" href="@Url.Action("Index", "Home")">
                    <img alt="YPrime Study Portal" src="~/Content/Images/logo.png" />
                </a>
            </div>

            <div class="collapse navbar-collapse">
                @{ Html.RenderAction("MainMenu", "UI"); }
            </div>
        </div>
    </nav>
    <div id="main-content">
        <div class="container-fluid container_white">
            @Html.Partial("_SessionTimeoutWarning")
            @RenderBody()
        </div>
        @Html.Hidden("ElectronicSignatureTitle", Html.TranslationLabel("lblElectronicSignature", (string)ViewBag.SiteUserCultureCode))
    </div>

    <div id="loadingSpinner">
        <em class="fa fa-spinner fa-spin fa-3x fa-fw"></em>
    </div>

    @*This will check for any messages and display them*@
    @if ((Context.Response.StatusCode == (int)HttpStatusCode.OK ||
        Context.Response.StatusCode == (int)HttpStatusCode.Created) &&
        Session["HasLoadupMessage"] != null && (bool)Session["HasLoadupMessage"])
    {
        <div>
            @if (((string)Session["ReloadPopupMessageTitle"]).Contains("BYODCode"))
            {

                <script type="text/javascript">
            var patientId = '';
            var url = "@Session["ReloadPopupMessage"]";
            var messageId = "@Session["PopupMessageGuid"]";

                </script>

                if ((string)Session["ReloadPopupMessageTitle"] == "BYODCodeExisting")
                {
                    <script type="text/javascript">
                patientId = '@Url.Action("Edit", "Patient")?guid=' + messageId;
                    </script>
                }

                <script type="text/javascript">

                    var failCallback = null;
                    var options = {};
                    ajaxLoad(url, '', showPopup, failCallback, 'Preview', options);

                    setLastMessageGuid(messageId);

                </script>
            }
            else
            {
                @Html.BootstrapMessage((string)Session["ReloadPopupMessageTitle"], (string)Session["ReloadPopupMessage"], (Guid)Session["PopupMessageGuid"])
            }
        </div>

        Session["HasLoadupMessage"] = false;
        Session["ReloadPopupMessageTitle"] = null;
        Session["ReloadPopupMessage"] = null;
    }

    @if (ViewBag.IsSupportChatEnabled != null && ViewBag.IsSupportChatEnabled)
    {
        <a id="support-link" href="@ViewBag.SupportChatURL" class="support-button" target="_blank" rel="noopener noreferrer">
            <em id="Support-icon" class="fa fa-comment-o"></em>
            <span id="Support-label">
                Support
            </span>
        </a>
    }

    <script type="text/javascript">
    var GLOBAL_smallLogoUrl = '@Url.Content("~/Content/Images/YPrimeWhiteSm.png")';
    var GLOBAL_BaseUrl = "@($"{Request.Url.Scheme}://{Request.Url.Authority}{Url.Content("~/")}")";
    var GLOBAL_LandingPageUrl = '@ViewBag.LandingPageUrl';
    //todo: translate this!
    var GLOBAL_LandingPageSetText = 'Set as home page';
    var GLOBAL_LandingPageUnSetText = 'Remove as home page';
    var GLOBAL_ElectronicSignatureUrl = '@Url.Action("ElectronicSignature", "UI")';

    //load up all datepickers
    $(document).ready(function() {
        if (self != top) {
            top.location = self.location;
        }

        initLayout();

        var supportChatAvailable = sessionStorage.getItem('supportChatAvailable');

        if (supportChatAvailable != null) {

            if (supportChatAvailable == "true") {
                $('#support-link').show();
            } else {
                $('#support-link').hide();
            }
        } else {

            /* Call the support URL. */
            $.ajax({
                url: '@Url.Action("IsSupportChatAvailable", "Support")',
                dataType: "json",
                type: 'GET',
                success: function(data) {
                    if (data.isSupportChatAvailable) {
                        sessionStorage.setItem('supportChatAvailable', true);
                        $('#support-link').show();
                    } else {
                        sessionStorage.setItem('supportChatAvailable', false);
                        $('#support-link').hide();
                    }
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    sessionStorage.setItem('supportChatAvailable', false);
                    $('#support-link').hide();
                }
            });
        }
    });

    var InitializeSupportLink = function() {
        $('#support-link').hide();
    };

    function initLayout() {
        InitializeSupportLink();

        LoadDirectives();

        //set the version information
        $('#application-information-popover').popover({
            html: true,
            content: function() {
                return $('#popover-application-info').html();
            },
            title: function() {
                return $('#popover-application-title').html();
            },
            sanitize: false //,
            //trigger: 'hover'
        });

        //todo: this should be in directives
        $(".inputDatePicker").datepicker();
        $(document)
            .on('keydown',
                '.inputNumberSpinner',
                function(e) {
                    // Allow: backspace, delete, tab, escape, enter and .
                    if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                        // Allow: Ctrl+A, Command+A
                        (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                        // Allow: home, end, left, right, down, up
                        (e.keyCode >= 35 && e.keyCode <= 40)) {
                        // let it happen, don't do anything
                        return;
                    }
                    // Ensure that it is a number and stop the keypress
                    if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                        e.preventDefault();
                    }
                });

        //Highlight selected page
        $(function() {
            var menuGroup = '@ViewBag.MenuGroup';
            if (menuGroup) {
                $('[menu-group="' + menuGroup + '"]').addClass("on");
            }
        });
    }
    </script>

</body>
</html>